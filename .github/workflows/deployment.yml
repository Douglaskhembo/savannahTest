name: CI/CD Pipeline - Render

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-python:
    name: Set up Python & Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Cache pip
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov flake8 black

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: setup-python
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install flake8 + black
        run: pip install flake8 black
      - name: Run linter (use .flake8 config)
        run: flake8 .

  test:
    name: Run Tests (with Postgres)
    runs-on: ubuntu-latest
    needs: setup-python

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: savannah
          POSTGRES_PASSWORD: savannah_user
          POSTGRES_DB: savannah_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U savannah -d savannah_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://savannah:savannah_user@localhost:5432/savannah_db

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install test dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov
      - name: Run tests
        run: pytest --ds=src.config.settings --cov=src

  docker_build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [ lint, test ]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & push Docker image
        run: |
          docker build --pull \
            -t ${{ secrets.DOCKER_REPO }}:latest .
          docker push ${{ secrets.DOCKER_REPO }}:latest

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: Trigger Render Deploy
        run: |
          curl --fail -X POST \
            -H "Accept: application/json" \
            ${{ secrets.RENDER_DEPLOY_HOOK }}
